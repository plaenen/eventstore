// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: eventsourcing/response.proto

package eventsourcing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Response is the standard wrapper for all RPC responses
// Every command and query returns this structure
type Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// success indicates if the operation completed successfully
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// error contains details if success = false
	Error *AppError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// data contains the actual response payload (e.g., OpenAccountResponse)
	// Only populated if success = true
	Data          *anypb.Any `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_eventsourcing_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_eventsourcing_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_eventsourcing_response_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Response) GetError() *AppError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Response) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

// AppError provides structured error information
type AppError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// code is a machine-readable error code (e.g., "INSUFFICIENT_BALANCE")
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// message is a human-readable error message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// solution suggests how to fix the error
	Solution string `protobuf:"bytes,3,opt,name=solution,proto3" json:"solution,omitempty"`
	// details provides additional context (field names, values, etc.)
	Details       map[string]string `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppError) Reset() {
	*x = AppError{}
	mi := &file_eventsourcing_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppError) ProtoMessage() {}

func (x *AppError) ProtoReflect() protoreflect.Message {
	mi := &file_eventsourcing_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppError.ProtoReflect.Descriptor instead.
func (*AppError) Descriptor() ([]byte, []int) {
	return file_eventsourcing_response_proto_rawDescGZIP(), []int{1}
}

func (x *AppError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AppError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AppError) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

func (x *AppError) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_eventsourcing_response_proto protoreflect.FileDescriptor

const file_eventsourcing_response_proto_rawDesc = "" +
	"\n" +
	"\x1ceventsourcing/response.proto\x12\reventsourcing\x1a\x19google/protobuf/any.proto\"}\n" +
	"\bResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12-\n" +
	"\x05error\x18\x02 \x01(\v2\x17.eventsourcing.AppErrorR\x05error\x12(\n" +
	"\x04data\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x04data\"\xd0\x01\n" +
	"\bAppError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1a\n" +
	"\bsolution\x18\x03 \x01(\tR\bsolution\x12>\n" +
	"\adetails\x18\x04 \x03(\v2$.eventsourcing.AppError.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B?Z=github.com/plaenen/eventstore/pkg/eventsourcing;eventsourcingb\x06proto3"

var (
	file_eventsourcing_response_proto_rawDescOnce sync.Once
	file_eventsourcing_response_proto_rawDescData []byte
)

func file_eventsourcing_response_proto_rawDescGZIP() []byte {
	file_eventsourcing_response_proto_rawDescOnce.Do(func() {
		file_eventsourcing_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eventsourcing_response_proto_rawDesc), len(file_eventsourcing_response_proto_rawDesc)))
	})
	return file_eventsourcing_response_proto_rawDescData
}

var file_eventsourcing_response_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_eventsourcing_response_proto_goTypes = []any{
	(*Response)(nil),  // 0: eventsourcing.Response
	(*AppError)(nil),  // 1: eventsourcing.AppError
	nil,               // 2: eventsourcing.AppError.DetailsEntry
	(*anypb.Any)(nil), // 3: google.protobuf.Any
}
var file_eventsourcing_response_proto_depIdxs = []int32{
	1, // 0: eventsourcing.Response.error:type_name -> eventsourcing.AppError
	3, // 1: eventsourcing.Response.data:type_name -> google.protobuf.Any
	2, // 2: eventsourcing.AppError.details:type_name -> eventsourcing.AppError.DetailsEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_eventsourcing_response_proto_init() }
func file_eventsourcing_response_proto_init() {
	if File_eventsourcing_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eventsourcing_response_proto_rawDesc), len(file_eventsourcing_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eventsourcing_response_proto_goTypes,
		DependencyIndexes: file_eventsourcing_response_proto_depIdxs,
		MessageInfos:      file_eventsourcing_response_proto_msgTypes,
	}.Build()
	File_eventsourcing_response_proto = out.File
	file_eventsourcing_response_proto_goTypes = nil
	file_eventsourcing_response_proto_depIdxs = nil
}
