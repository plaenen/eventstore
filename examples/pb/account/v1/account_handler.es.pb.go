// Code generated by protoc-gen-eventsourcing. DO NOT EDIT.
// version: 0.0.4
// Handler interfaces for v1
// Developers implement these interfaces to handle commands and queries

package accountv1

import (
	"context"

	"github.com/plaenen/eventstore/pkg/eventsourcing"
)

// AccountCommandServiceHandler is the interface developers implement to handle AccountCommandService requests
type AccountCommandServiceHandler interface {
	// OpenAccount handles the OpenAccount command
	OpenAccount(ctx context.Context, cmd *OpenAccountCommand) (*OpenAccountResponse, *eventsourcing.AppError)
	// Deposit handles the Deposit command
	Deposit(ctx context.Context, cmd *DepositCommand) (*DepositResponse, *eventsourcing.AppError)
	// Withdraw handles the Withdraw command
	Withdraw(ctx context.Context, cmd *WithdrawCommand) (*WithdrawResponse, *eventsourcing.AppError)
	// CloseAccount handles the CloseAccount command
	CloseAccount(ctx context.Context, cmd *CloseAccountCommand) (*CloseAccountResponse, *eventsourcing.AppError)
}

// AccountQueryServiceHandler is the interface developers implement to handle AccountQueryService requests
type AccountQueryServiceHandler interface {
	// GetAccount handles the GetAccount query
	GetAccount(ctx context.Context, query *GetAccountRequest) (*AccountView, *eventsourcing.AppError)
	// ListAccounts handles the ListAccounts query
	ListAccounts(ctx context.Context, query *ListAccountsRequest) (*ListAccountsResponse, *eventsourcing.AppError)
	// GetAccountBalance handles the GetAccountBalance query
	GetAccountBalance(ctx context.Context, query *GetAccountBalanceRequest) (*BalanceView, *eventsourcing.AppError)
	// GetAccountHistory handles the GetAccountHistory query
	GetAccountHistory(ctx context.Context, query *GetAccountHistoryRequest) (*AccountHistoryResponse, *eventsourcing.AppError)
}
