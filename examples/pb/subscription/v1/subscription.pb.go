// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: subscription/v1/subscription.proto

package subscriptionv1

import (
	v1 "github.com/plaenen/eventstore/examples/entity/v1"
	_ "github.com/plaenen/eventstore/pkg/eventsourcing"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSubscriptionCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AdminEmail    string                 `protobuf:"bytes,1,opt,name=admin_email,json=adminEmail,proto3" json:"admin_email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubscriptionCommand) Reset() {
	*x = CreateSubscriptionCommand{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubscriptionCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionCommand) ProtoMessage() {}

func (x *CreateSubscriptionCommand) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionCommand.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionCommand) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSubscriptionCommand) GetAdminEmail() string {
	if x != nil {
		return x.AdminEmail
	}
	return ""
}

type CreateSubscriptionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	Version        int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateSubscriptionResponse) Reset() {
	*x = CreateSubscriptionResponse{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionResponse) ProtoMessage() {}

func (x *CreateSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSubscriptionResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *CreateSubscriptionResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type CancelSubscriptionCommand struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CancelSubscriptionCommand) Reset() {
	*x = CancelSubscriptionCommand{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelSubscriptionCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscriptionCommand) ProtoMessage() {}

func (x *CancelSubscriptionCommand) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscriptionCommand.ProtoReflect.Descriptor instead.
func (*CancelSubscriptionCommand) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{2}
}

func (x *CancelSubscriptionCommand) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type CancelSubscriptionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        v1.Status              `protobuf:"varint,1,opt,name=status,proto3,enum=entity.v1.Status" json:"status,omitempty"`
	Version       int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelSubscriptionResponse) Reset() {
	*x = CancelSubscriptionResponse{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscriptionResponse) ProtoMessage() {}

func (x *CancelSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*CancelSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{3}
}

func (x *CancelSubscriptionResponse) GetStatus() v1.Status {
	if x != nil {
		return x.Status
	}
	return v1.Status(0)
}

func (x *CancelSubscriptionResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetSubscriptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetSubscriptionRequest) Reset() {
	*x = GetSubscriptionRequest{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequest) ProtoMessage() {}

func (x *GetSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{4}
}

func (x *GetSubscriptionRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type GetSubscriptionResponse struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Version                   int64                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	SubscriptionId            string                 `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	AdminEmail                string                 `protobuf:"bytes,3,opt,name=admin_email,json=adminEmail,proto3" json:"admin_email,omitempty"`
	Status                    v1.Status              `protobuf:"varint,4,opt,name=status,proto3,enum=entity.v1.Status" json:"status,omitempty"`
	DisabledReason            DisabledReason         `protobuf:"varint,5,opt,name=disabled_reason,json=disabledReason,proto3,enum=subscription.v1.DisabledReason" json:"disabled_reason,omitempty"`
	DisabledReasonDescription string                 `protobuf:"bytes,6,opt,name=disabled_reason_description,json=disabledReasonDescription,proto3" json:"disabled_reason_description,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GetSubscriptionResponse) Reset() {
	*x = GetSubscriptionResponse{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionResponse) ProtoMessage() {}

func (x *GetSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{5}
}

func (x *GetSubscriptionResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetSubscriptionResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *GetSubscriptionResponse) GetAdminEmail() string {
	if x != nil {
		return x.AdminEmail
	}
	return ""
}

func (x *GetSubscriptionResponse) GetStatus() v1.Status {
	if x != nil {
		return x.Status
	}
	return v1.Status(0)
}

func (x *GetSubscriptionResponse) GetDisabledReason() DisabledReason {
	if x != nil {
		return x.DisabledReason
	}
	return DisabledReason_DISABLED_REASON_UNSPECIFIED
}

func (x *GetSubscriptionResponse) GetDisabledReasonDescription() string {
	if x != nil {
		return x.DisabledReasonDescription
	}
	return ""
}

var File_subscription_v1_subscription_proto protoreflect.FileDescriptor

const file_subscription_v1_subscription_proto_rawDesc = "" +
	"\n" +
	"\"subscription/v1/subscription.proto\x12\x0fsubscription.v1\x1a\x1beventsourcing/options.proto\x1a\x16entity/v1/entity.proto\x1a\x1bsubscription/v1/model.proto\"<\n" +
	"\x19CreateSubscriptionCommand\x12\x1f\n" +
	"\vadmin_email\x18\x01 \x01(\tR\n" +
	"adminEmail\"_\n" +
	"\x1aCreateSubscriptionResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\"D\n" +
	"\x19CancelSubscriptionCommand\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\"a\n" +
	"\x1aCancelSubscriptionResponse\x12)\n" +
	"\x06status\x18\x01 \x01(\x0e2\x11.entity.v1.StatusR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\"A\n" +
	"\x16GetSubscriptionRequest\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\"\xb2\x02\n" +
	"\x17GetSubscriptionResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x03R\aversion\x12'\n" +
	"\x0fsubscription_id\x18\x02 \x01(\tR\x0esubscriptionId\x12\x1f\n" +
	"\vadmin_email\x18\x03 \x01(\tR\n" +
	"adminEmail\x12)\n" +
	"\x06status\x18\x04 \x01(\x0e2\x11.entity.v1.StatusR\x06status\x12H\n" +
	"\x0fdisabled_reason\x18\x05 \x01(\x0e2\x1f.subscription.v1.DisabledReasonR\x0edisabledReason\x12>\n" +
	"\x1bdisabled_reason_description\x18\x06 \x01(\tR\x19disabledReasonDescription2\x9c\x02\n" +
	"\x1aSubscriptionCommandService\x12m\n" +
	"\x12CreateSubscription\x12*.subscription.v1.CreateSubscriptionCommand\x1a+.subscription.v1.CreateSubscriptionResponse\x12m\n" +
	"\x12CancelSubscription\x12*.subscription.v1.CancelSubscriptionCommand\x1a+.subscription.v1.CancelSubscriptionResponse\x1a \x92\xb5\x18\x1c\n" +
	"\fSubscription\x12\fSubscription2\x80\x01\n" +
	"\x18SubscriptionQueryService\x12d\n" +
	"\x0fGetSubscription\x12'.subscription.v1.GetSubscriptionRequest\x1a(.subscription.v1.GetSubscriptionResponseB\xcc\x01\n" +
	"\x13com.subscription.v1B\x11SubscriptionProtoP\x01ZEgithub.com/plaenen/eventstore/examples/subscription/v1;subscriptionv1\xa2\x02\x03SXX\xaa\x02\x0fSubscription.V1\xca\x02\x0fSubscription\\V1\xe2\x02\x1bSubscription\\V1\\GPBMetadata\xea\x02\x10Subscription::V1b\x06proto3"

var (
	file_subscription_v1_subscription_proto_rawDescOnce sync.Once
	file_subscription_v1_subscription_proto_rawDescData []byte
)

func file_subscription_v1_subscription_proto_rawDescGZIP() []byte {
	file_subscription_v1_subscription_proto_rawDescOnce.Do(func() {
		file_subscription_v1_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_subscription_v1_subscription_proto_rawDesc), len(file_subscription_v1_subscription_proto_rawDesc)))
	})
	return file_subscription_v1_subscription_proto_rawDescData
}

var file_subscription_v1_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_subscription_v1_subscription_proto_goTypes = []any{
	(*CreateSubscriptionCommand)(nil),  // 0: subscription.v1.CreateSubscriptionCommand
	(*CreateSubscriptionResponse)(nil), // 1: subscription.v1.CreateSubscriptionResponse
	(*CancelSubscriptionCommand)(nil),  // 2: subscription.v1.CancelSubscriptionCommand
	(*CancelSubscriptionResponse)(nil), // 3: subscription.v1.CancelSubscriptionResponse
	(*GetSubscriptionRequest)(nil),     // 4: subscription.v1.GetSubscriptionRequest
	(*GetSubscriptionResponse)(nil),    // 5: subscription.v1.GetSubscriptionResponse
	(v1.Status)(0),                     // 6: entity.v1.Status
	(DisabledReason)(0),                // 7: subscription.v1.DisabledReason
}
var file_subscription_v1_subscription_proto_depIdxs = []int32{
	6, // 0: subscription.v1.CancelSubscriptionResponse.status:type_name -> entity.v1.Status
	6, // 1: subscription.v1.GetSubscriptionResponse.status:type_name -> entity.v1.Status
	7, // 2: subscription.v1.GetSubscriptionResponse.disabled_reason:type_name -> subscription.v1.DisabledReason
	0, // 3: subscription.v1.SubscriptionCommandService.CreateSubscription:input_type -> subscription.v1.CreateSubscriptionCommand
	2, // 4: subscription.v1.SubscriptionCommandService.CancelSubscription:input_type -> subscription.v1.CancelSubscriptionCommand
	4, // 5: subscription.v1.SubscriptionQueryService.GetSubscription:input_type -> subscription.v1.GetSubscriptionRequest
	1, // 6: subscription.v1.SubscriptionCommandService.CreateSubscription:output_type -> subscription.v1.CreateSubscriptionResponse
	3, // 7: subscription.v1.SubscriptionCommandService.CancelSubscription:output_type -> subscription.v1.CancelSubscriptionResponse
	5, // 8: subscription.v1.SubscriptionQueryService.GetSubscription:output_type -> subscription.v1.GetSubscriptionResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_subscription_v1_subscription_proto_init() }
func file_subscription_v1_subscription_proto_init() {
	if File_subscription_v1_subscription_proto != nil {
		return
	}
	file_subscription_v1_model_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_subscription_v1_subscription_proto_rawDesc), len(file_subscription_v1_subscription_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_subscription_v1_subscription_proto_goTypes,
		DependencyIndexes: file_subscription_v1_subscription_proto_depIdxs,
		MessageInfos:      file_subscription_v1_subscription_proto_msgTypes,
	}.Build()
	File_subscription_v1_subscription_proto = out.File
	file_subscription_v1_subscription_proto_goTypes = nil
	file_subscription_v1_subscription_proto_depIdxs = nil
}
